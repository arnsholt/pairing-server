# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import service_pb2 as service__pb2
from . import types_pb2 as types__pb2


class PairingServerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetTournament = channel.unary_unary(
        '/pairing_server.PairingServer/GetTournament',
        request_serializer=types__pb2.Identification.SerializeToString,
        response_deserializer=types__pb2.Tournament.FromString,
        )
    self.GetPlayers = channel.unary_stream(
        '/pairing_server.PairingServer/GetPlayers',
        request_serializer=types__pb2.Identification.SerializeToString,
        response_deserializer=types__pb2.Player.FromString,
        )
    self.GetTournamentGames = channel.unary_stream(
        '/pairing_server.PairingServer/GetTournamentGames',
        request_serializer=types__pb2.Identification.SerializeToString,
        response_deserializer=types__pb2.Game.FromString,
        )
    self.CreateTournament = channel.unary_unary(
        '/pairing_server.PairingServer/CreateTournament',
        request_serializer=types__pb2.Tournament.SerializeToString,
        response_deserializer=types__pb2.Identification.FromString,
        )
    self.PairNextRound = channel.unary_stream(
        '/pairing_server.PairingServer/PairNextRound',
        request_serializer=types__pb2.Identification.SerializeToString,
        response_deserializer=types__pb2.Game.FromString,
        )
    self.GetPlayer = channel.unary_unary(
        '/pairing_server.PairingServer/GetPlayer',
        request_serializer=types__pb2.Identification.SerializeToString,
        response_deserializer=types__pb2.Player.FromString,
        )
    self.PlayerGames = channel.unary_stream(
        '/pairing_server.PairingServer/PlayerGames',
        request_serializer=types__pb2.Identification.SerializeToString,
        response_deserializer=types__pb2.Game.FromString,
        )
    self.SignupPlayer = channel.unary_unary(
        '/pairing_server.PairingServer/SignupPlayer',
        request_serializer=types__pb2.Player.SerializeToString,
        response_deserializer=types__pb2.Identification.FromString,
        )
    self.Withdraw = channel.unary_unary(
        '/pairing_server.PairingServer/Withdraw',
        request_serializer=types__pb2.Identification.SerializeToString,
        response_deserializer=service__pb2.Nothing.FromString,
        )
    self.Reenter = channel.unary_unary(
        '/pairing_server.PairingServer/Reenter',
        request_serializer=types__pb2.Identification.SerializeToString,
        response_deserializer=service__pb2.Nothing.FromString,
        )
    self.Expel = channel.unary_unary(
        '/pairing_server.PairingServer/Expel',
        request_serializer=service__pb2.ExpulsionRequest.SerializeToString,
        response_deserializer=service__pb2.Nothing.FromString,
        )
    self.Readmit = channel.unary_unary(
        '/pairing_server.PairingServer/Readmit',
        request_serializer=service__pb2.ExpulsionRequest.SerializeToString,
        response_deserializer=service__pb2.Nothing.FromString,
        )
    self.GetGame = channel.unary_unary(
        '/pairing_server.PairingServer/GetGame',
        request_serializer=types__pb2.Identification.SerializeToString,
        response_deserializer=types__pb2.Game.FromString,
        )
    self.RegisterResult = channel.unary_unary(
        '/pairing_server.PairingServer/RegisterResult',
        request_serializer=service__pb2.RegisterResultRequest.SerializeToString,
        response_deserializer=service__pb2.Nothing.FromString,
        )
    self.ChangeResult = channel.unary_unary(
        '/pairing_server.PairingServer/ChangeResult',
        request_serializer=service__pb2.ChangeResultRequest.SerializeToString,
        response_deserializer=service__pb2.Nothing.FromString,
        )


class PairingServerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetTournament(self, request, context):
    """Operations on tournaments:
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetPlayers(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetTournamentGames(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateTournament(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PairNextRound(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetPlayer(self, request, context):
    """Operations on players:
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PlayerGames(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SignupPlayer(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Withdraw(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Reenter(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Expel(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Readmit(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetGame(self, request, context):
    """Operations on games:
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RegisterResult(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ChangeResult(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PairingServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetTournament': grpc.unary_unary_rpc_method_handler(
          servicer.GetTournament,
          request_deserializer=types__pb2.Identification.FromString,
          response_serializer=types__pb2.Tournament.SerializeToString,
      ),
      'GetPlayers': grpc.unary_stream_rpc_method_handler(
          servicer.GetPlayers,
          request_deserializer=types__pb2.Identification.FromString,
          response_serializer=types__pb2.Player.SerializeToString,
      ),
      'GetTournamentGames': grpc.unary_stream_rpc_method_handler(
          servicer.GetTournamentGames,
          request_deserializer=types__pb2.Identification.FromString,
          response_serializer=types__pb2.Game.SerializeToString,
      ),
      'CreateTournament': grpc.unary_unary_rpc_method_handler(
          servicer.CreateTournament,
          request_deserializer=types__pb2.Tournament.FromString,
          response_serializer=types__pb2.Identification.SerializeToString,
      ),
      'PairNextRound': grpc.unary_stream_rpc_method_handler(
          servicer.PairNextRound,
          request_deserializer=types__pb2.Identification.FromString,
          response_serializer=types__pb2.Game.SerializeToString,
      ),
      'GetPlayer': grpc.unary_unary_rpc_method_handler(
          servicer.GetPlayer,
          request_deserializer=types__pb2.Identification.FromString,
          response_serializer=types__pb2.Player.SerializeToString,
      ),
      'PlayerGames': grpc.unary_stream_rpc_method_handler(
          servicer.PlayerGames,
          request_deserializer=types__pb2.Identification.FromString,
          response_serializer=types__pb2.Game.SerializeToString,
      ),
      'SignupPlayer': grpc.unary_unary_rpc_method_handler(
          servicer.SignupPlayer,
          request_deserializer=types__pb2.Player.FromString,
          response_serializer=types__pb2.Identification.SerializeToString,
      ),
      'Withdraw': grpc.unary_unary_rpc_method_handler(
          servicer.Withdraw,
          request_deserializer=types__pb2.Identification.FromString,
          response_serializer=service__pb2.Nothing.SerializeToString,
      ),
      'Reenter': grpc.unary_unary_rpc_method_handler(
          servicer.Reenter,
          request_deserializer=types__pb2.Identification.FromString,
          response_serializer=service__pb2.Nothing.SerializeToString,
      ),
      'Expel': grpc.unary_unary_rpc_method_handler(
          servicer.Expel,
          request_deserializer=service__pb2.ExpulsionRequest.FromString,
          response_serializer=service__pb2.Nothing.SerializeToString,
      ),
      'Readmit': grpc.unary_unary_rpc_method_handler(
          servicer.Readmit,
          request_deserializer=service__pb2.ExpulsionRequest.FromString,
          response_serializer=service__pb2.Nothing.SerializeToString,
      ),
      'GetGame': grpc.unary_unary_rpc_method_handler(
          servicer.GetGame,
          request_deserializer=types__pb2.Identification.FromString,
          response_serializer=types__pb2.Game.SerializeToString,
      ),
      'RegisterResult': grpc.unary_unary_rpc_method_handler(
          servicer.RegisterResult,
          request_deserializer=service__pb2.RegisterResultRequest.FromString,
          response_serializer=service__pb2.Nothing.SerializeToString,
      ),
      'ChangeResult': grpc.unary_unary_rpc_method_handler(
          servicer.ChangeResult,
          request_deserializer=service__pb2.ChangeResultRequest.FromString,
          response_serializer=service__pb2.Nothing.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'pairing_server.PairingServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
