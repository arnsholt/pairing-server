# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import types_pb2 as types__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='service.proto',
  package='pairing_server',
  syntax='proto3',
  serialized_pb=_b('\n\rservice.proto\x12\x0epairing_server\x1a\x0btypes.proto\"o\n\x15RegisterResultRequest\x12.\n\x06gameId\x18\x01 \x01(\x0b\x32\x1e.pairing_server.Identification\x12&\n\x06result\x18\x02 \x01(\x0e\x32\x16.pairing_server.Result\"\xa6\x01\n\x13\x43hangeResultRequest\x12\x34\n\x0ctournamentId\x18\x01 \x01(\x0b\x32\x1e.pairing_server.Identification\x12.\n\x06gameId\x18\x02 \x01(\x0b\x32\x1e.pairing_server.Identification\x12)\n\tnewResult\x18\x03 \x01(\x0e\x32\x16.pairing_server.Result\"z\n\x10\x45xpulsionRequest\x12\x34\n\x0ctournamentId\x18\x01 \x01(\x0b\x32\x1e.pairing_server.Identification\x12\x30\n\x08playerId\x18\x02 \x01(\x0b\x32\x1e.pairing_server.Identification\"\t\n\x07Nothing2\x94\x07\n\rPairingServer\x12M\n\rGetTournament\x12\x1e.pairing_server.Identification\x1a\x1a.pairing_server.Tournament\"\x00\x12H\n\nGetPlayers\x12\x1e.pairing_server.Identification\x1a\x16.pairing_server.Player\"\x00\x30\x01\x12\x44\n\x08GetGames\x12\x1e.pairing_server.Identification\x1a\x14.pairing_server.Game\"\x00\x30\x01\x12P\n\x10\x43reateTournament\x12\x1a.pairing_server.Tournament\x1a\x1e.pairing_server.Identification\"\x00\x12I\n\rPairNextRound\x12\x1e.pairing_server.Identification\x1a\x14.pairing_server.Game\"\x00\x30\x01\x12H\n\x0cSignupPlayer\x12\x16.pairing_server.Player\x1a\x1e.pairing_server.Identification\"\x00\x12R\n\x0eRegisterResult\x12%.pairing_server.RegisterResultRequest\x1a\x17.pairing_server.Nothing\"\x00\x12N\n\x0c\x43hangeResult\x12#.pairing_server.ChangeResultRequest\x1a\x17.pairing_server.Nothing\"\x00\x12\x45\n\x08Withdraw\x12\x1e.pairing_server.Identification\x1a\x17.pairing_server.Nothing\"\x00\x12\x44\n\x07Reenter\x12\x1e.pairing_server.Identification\x1a\x17.pairing_server.Nothing\"\x00\x12\x44\n\x05\x45xpel\x12 .pairing_server.ExpulsionRequest\x1a\x17.pairing_server.Nothing\"\x00\x12\x46\n\x07Readmit\x12 .pairing_server.ExpulsionRequest\x1a\x17.pairing_server.Nothing\"\x00\x62\x06proto3')
  ,
  dependencies=[types__pb2.DESCRIPTOR,])




_REGISTERRESULTREQUEST = _descriptor.Descriptor(
  name='RegisterResultRequest',
  full_name='pairing_server.RegisterResultRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='gameId', full_name='pairing_server.RegisterResultRequest.gameId', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='result', full_name='pairing_server.RegisterResultRequest.result', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=46,
  serialized_end=157,
)


_CHANGERESULTREQUEST = _descriptor.Descriptor(
  name='ChangeResultRequest',
  full_name='pairing_server.ChangeResultRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tournamentId', full_name='pairing_server.ChangeResultRequest.tournamentId', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='gameId', full_name='pairing_server.ChangeResultRequest.gameId', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='newResult', full_name='pairing_server.ChangeResultRequest.newResult', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=160,
  serialized_end=326,
)


_EXPULSIONREQUEST = _descriptor.Descriptor(
  name='ExpulsionRequest',
  full_name='pairing_server.ExpulsionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tournamentId', full_name='pairing_server.ExpulsionRequest.tournamentId', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='playerId', full_name='pairing_server.ExpulsionRequest.playerId', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=328,
  serialized_end=450,
)


_NOTHING = _descriptor.Descriptor(
  name='Nothing',
  full_name='pairing_server.Nothing',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=452,
  serialized_end=461,
)

_REGISTERRESULTREQUEST.fields_by_name['gameId'].message_type = types__pb2._IDENTIFICATION
_REGISTERRESULTREQUEST.fields_by_name['result'].enum_type = types__pb2._RESULT
_CHANGERESULTREQUEST.fields_by_name['tournamentId'].message_type = types__pb2._IDENTIFICATION
_CHANGERESULTREQUEST.fields_by_name['gameId'].message_type = types__pb2._IDENTIFICATION
_CHANGERESULTREQUEST.fields_by_name['newResult'].enum_type = types__pb2._RESULT
_EXPULSIONREQUEST.fields_by_name['tournamentId'].message_type = types__pb2._IDENTIFICATION
_EXPULSIONREQUEST.fields_by_name['playerId'].message_type = types__pb2._IDENTIFICATION
DESCRIPTOR.message_types_by_name['RegisterResultRequest'] = _REGISTERRESULTREQUEST
DESCRIPTOR.message_types_by_name['ChangeResultRequest'] = _CHANGERESULTREQUEST
DESCRIPTOR.message_types_by_name['ExpulsionRequest'] = _EXPULSIONREQUEST
DESCRIPTOR.message_types_by_name['Nothing'] = _NOTHING
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

RegisterResultRequest = _reflection.GeneratedProtocolMessageType('RegisterResultRequest', (_message.Message,), dict(
  DESCRIPTOR = _REGISTERRESULTREQUEST,
  __module__ = 'service_pb2'
  # @@protoc_insertion_point(class_scope:pairing_server.RegisterResultRequest)
  ))
_sym_db.RegisterMessage(RegisterResultRequest)

ChangeResultRequest = _reflection.GeneratedProtocolMessageType('ChangeResultRequest', (_message.Message,), dict(
  DESCRIPTOR = _CHANGERESULTREQUEST,
  __module__ = 'service_pb2'
  # @@protoc_insertion_point(class_scope:pairing_server.ChangeResultRequest)
  ))
_sym_db.RegisterMessage(ChangeResultRequest)

ExpulsionRequest = _reflection.GeneratedProtocolMessageType('ExpulsionRequest', (_message.Message,), dict(
  DESCRIPTOR = _EXPULSIONREQUEST,
  __module__ = 'service_pb2'
  # @@protoc_insertion_point(class_scope:pairing_server.ExpulsionRequest)
  ))
_sym_db.RegisterMessage(ExpulsionRequest)

Nothing = _reflection.GeneratedProtocolMessageType('Nothing', (_message.Message,), dict(
  DESCRIPTOR = _NOTHING,
  __module__ = 'service_pb2'
  # @@protoc_insertion_point(class_scope:pairing_server.Nothing)
  ))
_sym_db.RegisterMessage(Nothing)



_PAIRINGSERVER = _descriptor.ServiceDescriptor(
  name='PairingServer',
  full_name='pairing_server.PairingServer',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=464,
  serialized_end=1380,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetTournament',
    full_name='pairing_server.PairingServer.GetTournament',
    index=0,
    containing_service=None,
    input_type=types__pb2._IDENTIFICATION,
    output_type=types__pb2._TOURNAMENT,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetPlayers',
    full_name='pairing_server.PairingServer.GetPlayers',
    index=1,
    containing_service=None,
    input_type=types__pb2._IDENTIFICATION,
    output_type=types__pb2._PLAYER,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetGames',
    full_name='pairing_server.PairingServer.GetGames',
    index=2,
    containing_service=None,
    input_type=types__pb2._IDENTIFICATION,
    output_type=types__pb2._GAME,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CreateTournament',
    full_name='pairing_server.PairingServer.CreateTournament',
    index=3,
    containing_service=None,
    input_type=types__pb2._TOURNAMENT,
    output_type=types__pb2._IDENTIFICATION,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='PairNextRound',
    full_name='pairing_server.PairingServer.PairNextRound',
    index=4,
    containing_service=None,
    input_type=types__pb2._IDENTIFICATION,
    output_type=types__pb2._GAME,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SignupPlayer',
    full_name='pairing_server.PairingServer.SignupPlayer',
    index=5,
    containing_service=None,
    input_type=types__pb2._PLAYER,
    output_type=types__pb2._IDENTIFICATION,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RegisterResult',
    full_name='pairing_server.PairingServer.RegisterResult',
    index=6,
    containing_service=None,
    input_type=_REGISTERRESULTREQUEST,
    output_type=_NOTHING,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ChangeResult',
    full_name='pairing_server.PairingServer.ChangeResult',
    index=7,
    containing_service=None,
    input_type=_CHANGERESULTREQUEST,
    output_type=_NOTHING,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Withdraw',
    full_name='pairing_server.PairingServer.Withdraw',
    index=8,
    containing_service=None,
    input_type=types__pb2._IDENTIFICATION,
    output_type=_NOTHING,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Reenter',
    full_name='pairing_server.PairingServer.Reenter',
    index=9,
    containing_service=None,
    input_type=types__pb2._IDENTIFICATION,
    output_type=_NOTHING,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Expel',
    full_name='pairing_server.PairingServer.Expel',
    index=10,
    containing_service=None,
    input_type=_EXPULSIONREQUEST,
    output_type=_NOTHING,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Readmit',
    full_name='pairing_server.PairingServer.Readmit',
    index=11,
    containing_service=None,
    input_type=_EXPULSIONREQUEST,
    output_type=_NOTHING,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_PAIRINGSERVER)

DESCRIPTOR.services_by_name['PairingServer'] = _PAIRINGSERVER

# @@protoc_insertion_point(module_scope)
