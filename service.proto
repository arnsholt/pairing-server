syntax = "proto3";

package pairing_server;

import "types.proto";

message RegisterResultRequest {
    Identification gameId = 1;
    Result result = 2;
}

message ChangeResultRequest {
    Identification tournamentId = 1;
    Identification gameId = 2;
    Result newResult = 3;
}

message ExpulsionRequest {
    Identification tournamentId = 1;
    Identification playerId = 2;
}

message Nothing {}

service PairingServer {
    // Operations on tournaments:
    rpc GetTournament(Identification) returns (Tournament) {}
    rpc GetPlayers(Identification) returns (stream Player) {}
    rpc GetTournamentGames(Identification) returns (stream Game) {}

    rpc CreateTournament(Tournament) returns (Identification) {}
    rpc PairNextRound(Identification) returns (stream Game) {}

    // Operations on players:
    rpc GetPlayer(Identification) returns (Player) {}
    rpc PlayerGames(Identification) returns (stream Game) {}
    rpc SignupPlayer(Player) returns (Identification) {}

    rpc Withdraw(Identification) returns (Nothing) {}
    rpc Reenter(Identification) returns (Nothing) {}

    rpc Expel(ExpulsionRequest) returns (Nothing) {}
    rpc Readmit(ExpulsionRequest) returns (Nothing) {}

    // Operations on games:
    rpc GetGame(Identification) returns (Game) {}
    rpc RegisterResult(RegisterResultRequest) returns (Nothing) {}
    rpc ChangeResult(ChangeResultRequest) returns (Nothing) {}
}
